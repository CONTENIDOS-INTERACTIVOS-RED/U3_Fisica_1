{"remainingRequest":"/home/runner/work/U3_Fisica_1/U3_Fisica_1/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Fisica_1/U3_Fisica_1/src/views/Introduccion.vue?vue&type=template&id=4a96b833&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Fisica_1/U3_Fisica_1/src/views/Introduccion.vue","mtime":1747279669111},{"path":"/home/runner/work/U3_Fisica_1/U3_Fisica_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fisica_1/U3_Fisica_1/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fisica_1/U3_Fisica_1/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fisica_1/U3_Fisica_1/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Fisica_1/U3_Fisica_1/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jdXJzby1tYWluLWNvbnRhaW5lci5pbnRyb2R1Y2Npb24KICBCYW5uZXJJbnRlcm5vKHN1YlRpdHVsbz0iSW50cm9kdWNjacOzbiIpCiAgLmNvbnRhaW5lci50YXJqZXRhLnRhcmpldGEtLWJsYW5jYS5wLTQucC1tZC01Lm1iLTUKICAgIC5yb3cuanVzdGlmeS1jb250ZW50LWNlbnRlci5tYi01ICAgICAgICAgICAKICAgICAgLmNvbC1sZy00CiAgICAgICAgLmJnLWNvbG9yLTEucC0zLmgtMTAwLmJyb3VuZGVkLmoxCiAgICAgICAgICBwKGRhdGEtYW9zPSJmYWRlLWRvd24iKS5tYi0wIEVuIGVzdGEgdW5pZGFkLCBzZSBleHBsb3JhcsOhbiBsb3MgcHJpbmNpcGlvcyBmdW5kYW1lbnRhbGVzIGRlbCBtb21lbnRvIGxpbmVhbCB5IHJvdGFjaW9uYWwsIGluY2x1aWRhIHN1IGFwbGljYWNpw7NuIGVuIGVsIGFuw6FsaXNpcyB5IGRpc2XDsW8gZGUgc2lzdGVtYXMgbWVjw6FuaWNvcy4gRWwgZXN0dWRpbyBkZWwgbW9tZW50byBsaW5lYWwgeSByb3RhY2lvbmFsLCBlcyBlc2VuY2lhbCBwYXJhIGNvbXByZW5kZXIgZWwgY29tcG9ydGFtaWVudG8gZGluw6FtaWNvIGRlIGxvcyBjdWVycG9zIGVuIG1vdmltaWVudG8sIGRlc2RlIHBhcnTDrWN1bGFzIGhhc3RhIG3DoXF1aW5hcyBjb21wbGVqYXMuIEVzdGEgdW5pZGFkIHNlbnRhcsOhIGxhcyBiYXNlcyBwYXJhIGVuZnJlbnRhciBkZXNhZsOtb3MgZGUgZGlzZcOxbyB5IG9wdGltaXphY2nDs24sIGVuIHN1IGNhcnJlcmEgZGUgSW5nZW5pZXLDrWEgSW5kdXN0cmlhbC4gICAgICAgICAgICAgICAKICAgICAgLmNvbC1sZy00Lm15LTQubXktbGctMAogICAgICAgIGZpZ3VyZQogICAgICAgICAgaW1nLmltZy1hLmltZy10KHNyYz0nQC9hc3NldHMvY3Vyc28vdGVtYXMvMS5wbmcnLCBhbHQ9JycsIGRhdGEtYW9zPSJ6b29tLWluIikgICAgICAgICAgCiAgICAgIC5jb2wtbGctNAogICAgICAgIC5iZy1jb2xvci0xLnAtMy5oLTEwMC5icm91bmRlZC5qMQogICAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1kb3duIikubWItMCBBbCBmaW5hbGl6YXIgZXN0YSB1bmlkYWQsIHNlcsOhIGNhcGF6IGRlIHJlc29sdmVyIHByb2JsZW1hcyByZWxhY2lvbmFkb3MgY29uIGVsIG1vbWVudG8gbGluZWFsIHkgcm90YWNpb25hbCwgY29uc2lkZXJhbmRvIHN1IGltcGFjdG8gZW4gZWwgZGlzZcOxbyB5IG9wZXJhY2nDs24gZGUgc2lzdGVtYXMgbWVjw6FuaWNvcy4gQWRxdWlyaXLDoSBoYWJpbGlkYWRlcyBwYXJhIGFuYWxpemFyIGxhIGNvbnNlcnZhY2nDs24gZGVsIG1vbWVudG8gbGluZWFsLCBjYWxjdWxhciBtb21lbnRvcyBkZSBpbmVyY2lhLCB5IGFwbGljYXIgZXN0b3MgY29uY2VwdG9zIGVuIGVsIGVzdHVkaW8gZGUgcG9sZWFzLCBlbmdyYW5hamVzLCBtZWNhbmlzbW9zIGRlIHRyYW5zbWlzacOzbiBkZSBwb3RlbmNpYSwgeSBlbiBsYSBvcHRpbWl6YWNpw7NuIGRlIG1hcXVpbmFyaWEgaW5kdXN0cmlhbC4KCiAgICAucm93Lm1iLTUgCiAgICAgIC5jb2wtbGctNC5tYi0zLm1iLWxnLTAgCiAgICAgICAgZmlndXJlCiAgICAgICAgICBpbWcuaW1nLWEuaW1nLXQoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hcy8yLnBuZyIsIGRhdGEtYW9zPSJ6b29tLWluIikgICAgICAgICAgICAKICAgICAgLmNvbC1sZy04CiAgICAgICAgLmJnLWNvbG9yLTMucC00Lm1iLTQoZGF0YS1hb3M9ImZhZGUtbGVmdCIpCiAgICAgICAgICAucm93LmFsaWduLWl0ZW1zLXN0YXJ0CiAgICAgICAgICAgIC5jb2wtbGctYXV0bwogICAgICAgICAgICAgIGltZy5pbWctYS5pbWctdChzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWFzLzMuc3ZnIikKICAgICAgICAgICAgLmNvbC1sZwogICAgICAgICAgICAgIHAubWItMCBMb3MgcHJpbmNpcGlvcyBkZWwgbW9tZW50byBsaW5lYWwgeSByb3RhY2lvbmFsLCB0aWVuZW4gdW5hIGFtcGxpYSBnYW1hIGRlIGFwbGljYWNpb25lcyBlbiBsYSBJbmdlbmllcsOtYSBJbmR1c3RyaWFsLiBEZXNkZSBlbCBkaXNlw7FvIGRlIHNpc3RlbWFzIGRlIHRyYW5zcG9ydGUgeSBtYW5pcHVsYWNpw7NuIGRlIG1hdGVyaWFsZXMsIGhhc3RhIGxhIG9wdGltaXphY2nDs24gZGUgbcOhcXVpbmFzIGhlcnJhbWllbnRhIHkgZXF1aXBvcyBkZSBwcm9jZXNhbWllbnRvLCBlc3RvcyBjb25jZXB0b3Mgc29uIGZ1bmRhbWVudGFsZXMgcGFyYSBtZWpvcmFyIGxhIGVmaWNpZW5jaWEsIGxhIHByZWNpc2nDs24geSBsYSB2aWRhIMO6dGlsIGRlIGxvcyBzaXN0ZW1hcyBtZWPDoW5pY29zLiBBbCBkb21pbmFyIGVzdG9zIHByaW5jaXBpb3MsIHNlIGZvcnRhbGVjZXLDoSBsYSBwcmVwYXJhY2nDs24gcGFyYSBlbmZyZW50YXIgbG9zIGRlc2Fmw61vcyBkZSBsYSBpbmR1c3RyaWEgbW9kZXJuYS4KCiAgICAgICAgcChkYXRhLWFvcz0iZmFkZS1kb3duIikgTGEgdW5pZGFkIHNlIGRpdmlkZSBlbiB0cmVzIHNlY2Npb25lcyBwcmluY2lwYWxlcy4gCgogICAgLmJnLWZ1bGwtd2lkdGgtMS5iZy1mb25kby0xLnB5LTQKICAgICAgLnB4LTQucHgtbWQtNSAKICAgICAgICBkaXYucm93Lmp1c3RpZnktY29udGVudC1jZW50ZXIuYWxpZ24taXRlbXMtc3RyZXRjaAogICAgICAgICAgZGl2LmNvbC1sZy00Lm1iLTQoZGF0YS1hb3M9Inpvb20taW4tdXAiKQogICAgICAgICAgICBkaXYuYmctY29sb3Itd2hpdGUuYm94LXNoYWRvdy5weC00LnB5LTUuaC0xMDAuYnItMQogICAgICAgICAgICAgIGltZy5teC1hdXRvLmQtYmxvY2subWItNChzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWFzLzQuc3ZnIiBhbHQ9IiIgc3R5bGU9IndpZHRoOiA5MHB4IikKICAgICAgICAgICAgICBoNS50ZXh0LWNlbnRlciBNb21lbnRvIGxpbmVhbCB5IHN1IGNvbnNlcnZhY2nDs24gCiAgICAgICAgICAgICAgcC5tYi0wLnRleHQtY2VudGVyIEVuIGxhIHByaW1lcmEgc2VjY2nDs24sIHNlIGFib3JkYXLDoW4gbG9zIHByaW5jaXBpb3MgZGVsIG1vbWVudG8gbGluZWFsIHkgc3UgY29uc2VydmFjacOzbiwgaW5jbHV5ZW5kbyBsYSBkZWZpbmljacOzbiBkZSBtb21lbnRvIGxpbmVhbCwgZWwgcHJpbmNpcGlvIGRlIGNvbnNlcnZhY2nDs24sIGxhIHJlbGFjacOzbiBlbnRyZSBpbXB1bHNvIHkgY2FtYmlvIGRlIG1vbWVudG8sIHkgbGFzIGNvbGlzaW9uZXMgZWzDoXN0aWNhcyBlIGluZWzDoXN0aWNhcy4KICAgICAgICAgIGRpdi5jb2wtbGctNC5tYi00KGRhdGEtYW9zPSJ6b29tLWluLXVwIikKICAgICAgICAgICAgZGl2LmJnLWNvbG9yLXdoaXRlLmJveC1zaGFkb3cucHgtNC5weS01LmgtMTAwLmJyLTEKICAgICAgICAgICAgICBpbWcubXgtYXV0by5kLWJsb2NrLm1iLTQoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hcy81LnN2ZyIgYWx0PSIiIHN0eWxlPSJ3aWR0aDogOTBweCIpCiAgICAgICAgICAgICAgaDUudGV4dC1jZW50ZXIgTW9tZW50byBkZSBpbmVyY2lhIAogICAgICAgICAgICAgIHAubWItMC50ZXh0LWNlbnRlciBFbiBsYSBzZWd1bmRhIHNlY2Npw7NuLCBzZSBleHBsb3JhcsOhIGVsIGNvbmNlcHRvIGRlIG1vbWVudG8gZGUgaW5lcmNpYSwgc3UgY8OhbGN1bG8gZW4gY3VlcnBvcyByw61naWRvcywgeSBzdSBpbXBhY3RvIGVuIGVsIGRpc2XDsW8gbWVjw6FuaWNvLgogICAgICAgIAogICAgICAgICAgZGl2LmNvbC1sZy00Lm1iLTQoZGF0YS1hb3M9Inpvb20taW4tdXAiKQogICAgICAgICAgICBkaXYuYmctY29sb3Itd2hpdGUuYm94LXNoYWRvdy5weC00LnB5LTUuaC0xMDAuYnItMQogICAgICAgICAgICAgIGltZy5teC1hdXRvLmQtYmxvY2subWItNChzcmM9IkAvYXNzZXRzL2N1cnNvL3RlbWFzLzYuc3ZnIiBhbHQ9IiIgc3R5bGU9IndpZHRoOiA5MHB4IikKICAgICAgICAgICAgICBoNS50ZXh0LWNlbnRlciBBcGxpY2FjacOzbiBkZSBlc3RvcyBjb25jZXB0b3MgCiAgICAgICAgICAgICAgcC5tYi0wLnRleHQtY2VudGVyIEVuIGxhIHRlcmNlcmEgc2VjY2nDs24sIHNlIGFwbGljYXLDoW4gZXN0b3MgY29uY2VwdG9zIGEgc2lzdGVtYXMgbWVjw6FuaWNvcyByZWFsZXMsIGNvbW8gcG9sZWFzLCBlbmdyYW5hamVzLCBtZWNhbmlzbW9zIGRlIHRyYW5zbWlzacOzbiBkZSBwb3RlbmNpYSwgeSBzZSBlc3R1ZGlhcsOhIGPDs21vIG9wdGltaXphciBsYSBtYXF1aW5hcmlhIGluZHVzdHJpYWwgY29uc2lkZXJhbmRvIGxhIGRpbsOhbWljYSByb3RhY2lvbmFsLgoKICAgIC5iZy1mdWxsLXdpZHRoLmJnLWNvbG9yLTIKICAgICAgLnB4LTQucHgtbWQtNS5weS0yCiAgICAgICAgLnJvdy5hbGlnbi1pdGVtcy1jZW50ZXIKICAgICAgICAgIC5jb2wtbGctYXV0bwogICAgICAgICAgICBpbWcuaW1nLWEuaW1nLXQoc3JjPSJAL2Fzc2V0cy9jdXJzby90ZW1hcy83LnN2ZyIpCiAgICAgICAgICAuY29sLWxnCiAgICAgICAgICAgIHAubWItMCBQYXJhIGFwcm92ZWNoYXIgYWwgbcOheGltbyBlc3RhIHVuaWRhZCwgZXMgaW1wb3J0YW50ZSBxdWUgdGVuZ2EgdW5hIHPDs2xpZGEgYmFzZSBlbiBsb3MgY29uY2VwdG9zIGRlIGbDrXNpY2EgeSBtYXRlbcOhdGljYXMsIGluY2x1eWVuZG8gdmVjdG9yZXMsIGPDoWxjdWxvIGRpZmVyZW5jaWFsIGUgaW50ZWdyYWwuIFNlIGVzcGVyYSBxdWUgcGFydGljaXBlIGFjdGl2YW1lbnRlIGVuIGxhcyBhY3RpdmlkYWRlcyBwcm9wdWVzdGFzLCByZWFsaWNlIGxvcyBlamVyY2ljaW9zIHkgcHJveWVjdG9zIGFzaWduYWRvcywgYnVzcXVlIG9wb3J0dW5pZGFkZXMgcGFyYSBhcGxpY2FyIGxvcyBjb25jZXB0b3MgYXByZW5kaWRvcyBlbiBzaXR1YWNpb25lcyBwcsOhY3RpY2FzLiBDb24gZGVkaWNhY2nDs24gYWRxdWlyaXLDoSBsYXMgaGFiaWxpZGFkZXMgbmVjZXNhcmlhcyBwYXJhIGFuYWxpemFyIHkgZGlzZcOxYXIgc2lzdGVtYXMgbWVjw6FuaWNvcyBlZmljaWVudGVzIHkgcm9idXN0b3MuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCg=="},null]}